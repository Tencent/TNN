/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Parameters.proto */

#ifndef PROTOBUF_C_Parameters_2eproto__INCLUDED
#define PROTOBUF_C_Parameters_2eproto__INCLUDED

#include "tnn/network/coreml/mlmodel/include/protobuf-c/protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "DataStructures.pb-c.h"

typedef struct _CoreML__Specification__Int64Parameter CoreML__Specification__Int64Parameter;
typedef struct _CoreML__Specification__DoubleParameter CoreML__Specification__DoubleParameter;
typedef struct _CoreML__Specification__StringParameter CoreML__Specification__StringParameter;
typedef struct _CoreML__Specification__BoolParameter CoreML__Specification__BoolParameter;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  CORE_ML__SPECIFICATION__INT64_PARAMETER__ALLOWED_VALUES__NOT_SET = 0,
  CORE_ML__SPECIFICATION__INT64_PARAMETER__ALLOWED_VALUES_RANGE = 10,
  CORE_ML__SPECIFICATION__INT64_PARAMETER__ALLOWED_VALUES_SET = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CORE_ML__SPECIFICATION__INT64_PARAMETER__ALLOWED_VALUES)
} CoreML__Specification__Int64Parameter__AllowedValuesCase;

/*
 **
 * Int64 parameter,
 * consisting of a default int64 value, and allowed range or set of values
 * value is unbounded if AllowedValues is not set.
 */
struct  _CoreML__Specification__Int64Parameter
{
  ProtobufCMessage base;
  int64_t defaultvalue;
  CoreML__Specification__Int64Parameter__AllowedValuesCase allowed_values_case;
  union {
    CoreML__Specification__Int64Range *range;
    CoreML__Specification__Int64Set *set;
  };
};
#define CORE_ML__SPECIFICATION__INT64_PARAMETER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&core_ml__specification__int64_parameter__descriptor) \
    , 0, CORE_ML__SPECIFICATION__INT64_PARAMETER__ALLOWED_VALUES__NOT_SET, {0} }


typedef enum {
  CORE_ML__SPECIFICATION__DOUBLE_PARAMETER__ALLOWED_VALUES__NOT_SET = 0,
  CORE_ML__SPECIFICATION__DOUBLE_PARAMETER__ALLOWED_VALUES_RANGE = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CORE_ML__SPECIFICATION__DOUBLE_PARAMETER__ALLOWED_VALUES)
} CoreML__Specification__DoubleParameter__AllowedValuesCase;

/*
 **
 * Double parameter,
 * consisting of a default double value, and allowed range of values
 * value is unbounded if AllowedValues is not set.
 */
struct  _CoreML__Specification__DoubleParameter
{
  ProtobufCMessage base;
  double defaultvalue;
  CoreML__Specification__DoubleParameter__AllowedValuesCase allowed_values_case;
  union {
    CoreML__Specification__DoubleRange *range;
  };
};
#define CORE_ML__SPECIFICATION__DOUBLE_PARAMETER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&core_ml__specification__double_parameter__descriptor) \
    , 0, CORE_ML__SPECIFICATION__DOUBLE_PARAMETER__ALLOWED_VALUES__NOT_SET, {0} }


/*
 **
 * String parameter,
 * A default string value must be provided
 */
struct  _CoreML__Specification__StringParameter
{
  ProtobufCMessage base;
  char *defaultvalue;
};
#define CORE_ML__SPECIFICATION__STRING_PARAMETER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&core_ml__specification__string_parameter__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 **
 * String parameter,
 * A default bool value must be provided
 */
struct  _CoreML__Specification__BoolParameter
{
  ProtobufCMessage base;
  protobuf_c_boolean defaultvalue;
};
#define CORE_ML__SPECIFICATION__BOOL_PARAMETER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&core_ml__specification__bool_parameter__descriptor) \
    , 0 }


/* CoreML__Specification__Int64Parameter methods */
void   core_ml__specification__int64_parameter__init
                     (CoreML__Specification__Int64Parameter         *message);
size_t core_ml__specification__int64_parameter__get_packed_size
                     (const CoreML__Specification__Int64Parameter   *message);
size_t core_ml__specification__int64_parameter__pack
                     (const CoreML__Specification__Int64Parameter   *message,
                      uint8_t             *out);
size_t core_ml__specification__int64_parameter__pack_to_buffer
                     (const CoreML__Specification__Int64Parameter   *message,
                      ProtobufCBuffer     *buffer);
CoreML__Specification__Int64Parameter *
       core_ml__specification__int64_parameter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   core_ml__specification__int64_parameter__free_unpacked
                     (CoreML__Specification__Int64Parameter *message,
                      ProtobufCAllocator *allocator);
/* CoreML__Specification__DoubleParameter methods */
void   core_ml__specification__double_parameter__init
                     (CoreML__Specification__DoubleParameter         *message);
size_t core_ml__specification__double_parameter__get_packed_size
                     (const CoreML__Specification__DoubleParameter   *message);
size_t core_ml__specification__double_parameter__pack
                     (const CoreML__Specification__DoubleParameter   *message,
                      uint8_t             *out);
size_t core_ml__specification__double_parameter__pack_to_buffer
                     (const CoreML__Specification__DoubleParameter   *message,
                      ProtobufCBuffer     *buffer);
CoreML__Specification__DoubleParameter *
       core_ml__specification__double_parameter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   core_ml__specification__double_parameter__free_unpacked
                     (CoreML__Specification__DoubleParameter *message,
                      ProtobufCAllocator *allocator);
/* CoreML__Specification__StringParameter methods */
void   core_ml__specification__string_parameter__init
                     (CoreML__Specification__StringParameter         *message);
size_t core_ml__specification__string_parameter__get_packed_size
                     (const CoreML__Specification__StringParameter   *message);
size_t core_ml__specification__string_parameter__pack
                     (const CoreML__Specification__StringParameter   *message,
                      uint8_t             *out);
size_t core_ml__specification__string_parameter__pack_to_buffer
                     (const CoreML__Specification__StringParameter   *message,
                      ProtobufCBuffer     *buffer);
CoreML__Specification__StringParameter *
       core_ml__specification__string_parameter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   core_ml__specification__string_parameter__free_unpacked
                     (CoreML__Specification__StringParameter *message,
                      ProtobufCAllocator *allocator);
/* CoreML__Specification__BoolParameter methods */
void   core_ml__specification__bool_parameter__init
                     (CoreML__Specification__BoolParameter         *message);
size_t core_ml__specification__bool_parameter__get_packed_size
                     (const CoreML__Specification__BoolParameter   *message);
size_t core_ml__specification__bool_parameter__pack
                     (const CoreML__Specification__BoolParameter   *message,
                      uint8_t             *out);
size_t core_ml__specification__bool_parameter__pack_to_buffer
                     (const CoreML__Specification__BoolParameter   *message,
                      ProtobufCBuffer     *buffer);
CoreML__Specification__BoolParameter *
       core_ml__specification__bool_parameter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   core_ml__specification__bool_parameter__free_unpacked
                     (CoreML__Specification__BoolParameter *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CoreML__Specification__Int64Parameter_Closure)
                 (const CoreML__Specification__Int64Parameter *message,
                  void *closure_data);
typedef void (*CoreML__Specification__DoubleParameter_Closure)
                 (const CoreML__Specification__DoubleParameter *message,
                  void *closure_data);
typedef void (*CoreML__Specification__StringParameter_Closure)
                 (const CoreML__Specification__StringParameter *message,
                  void *closure_data);
typedef void (*CoreML__Specification__BoolParameter_Closure)
                 (const CoreML__Specification__BoolParameter *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor core_ml__specification__int64_parameter__descriptor;
extern const ProtobufCMessageDescriptor core_ml__specification__double_parameter__descriptor;
extern const ProtobufCMessageDescriptor core_ml__specification__string_parameter__descriptor;
extern const ProtobufCMessageDescriptor core_ml__specification__bool_parameter__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Parameters_2eproto__INCLUDED */
