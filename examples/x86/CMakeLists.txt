cmake_minimum_required(VERSION 3.1)
project(TNN-demo)
message(${CMAKE_SOURCE_DIR})
message(${TNN_LIB_PATH})
option(TNN_OPENVINO_LIB_PATH "openvino lib path" "")

set(CMAKE_CXX_STANDARD 11)
set(TNN_CPU_ENABLE ON)
set(TNN_OPENVINO_ENABLE ON)

if (CMAKE_SYSTEM_NAME MATCHES "Windows")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /w")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w")
else()
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O3 -std=c++11 -fPIC")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -std=c++11 -pthread -fPIC")
endif()

set(TNNRoot ${CMAKE_SOURCE_DIR}/../../)
set(TNNInclude ${TNNRoot}/include)

include_directories(${TNNInclude})
include_directories(${CMAKE_SOURCE_DIR}/include)
include_directories(${CMAKE_SOURCE_DIR}/../base)
link_directories(${TNN_LIB_PATH})
if (${TNN_OPENVINO_ENABLE})
    link_directories(${TNN_OPENVINO_LIB_PATH})
endif()
if (CMAKE_SYSTEM_NAME MATCHES "Windows")
    link_libraries(TNN)
elseif(CMAKE_SYSTEM_NAME MATCHES "Linux")
    link_libraries(-Wl,--whole-archive TNN MKLDNNPlugin -Wl,--no-whole-archive)
else()
    link_libraries(TNN MKLDNNPlugin)
endif()

file(GLOB_RECURSE SRC "${CMAKE_SOURCE_DIR}/../base/*.cc")

add_executable(demo_x86_imagecalssify src/TNNImageClassify/TNNImageClassify.cc ${SRC})
add_executable(demo_x86_facedetector src/TNNFaceDetector/TNNFaceDetector.cc ${SRC})

